#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

if [[ "${TRACE-0}" == "1" ]]; then
    set -o xtrace
fi

if [[ "$#" -lt 1 ||  "${1-}" =~ ^-*h(elp)?$ ]]; then
    echo 'Usage: 
    ./valmi [STAGE] [COMMAND]
    ./valmi prod/dev [docker-compose args]
    ./valmi prod/dev --with-jitsu [docker-compose args]
    
    Script to manage valmi-activation services.
    '
    exit
fi

src_dir="$(cd "$(dirname "$0")"; pwd -P)"

main() {
    mode="$1"
    echo "Manage valmi-activation services:"

    cd $src_dir
    echo "Working directory: $PWD"

    echo "Setting environment variables from .env file"
    source $src_dir/.env
    
    jitsu_enabled=false

    cmd_args=${@:2}
    if [[ "$#" -gt 1   && "$2" == "--with-jitsu" ]]; then
            jitsu_enabled=true
            cmd_args=${@:3}
    fi

    # Check if the arguments are empty or not
    if [ -z "$cmd_args" ]
    then
        # If the arguments are empty, then set the default arguments to "up -d"
        cmd_args="up -d"
    fi


    if [ $jitsu_enabled == true ]
    then
        echo "Running: ${mode} --with-jitsu ${cmd_args}"
        echo "Running: ${mode} ${cmd_args} with jitsu"
        docker compose -f docker-compose.yml -f docker-compose.$mode.yml -f docker-compose.jitsu.yml $cmd_args
    else
        echo "Running: ${mode} ${cmd_args}"
        echo "Running: ${mode} ${cmd_args} without jitsu"
        docker compose -f docker-compose.yml -f docker-compose.$mode.yml $cmd_args
    fi
}

main "$@"
