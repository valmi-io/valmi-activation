version: "3.8"
services:
  redis:
    tty: true
    image: redis:6.2-alpine
    restart: "unless-stopped"
    command: "redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD:-default}"
    volumes:
      - ./data/redis:/var/lib/redis
    ports:
      - "6379:6379"
    networks:
      - valmi-network


  zookeeper:
    tty: true
    platform: linux/amd64
    image: wurstmeister/zookeeper:latest
    networks:
      - valmi-network
    ports:
      - "2181:2181"

  bulker:
    tty: true
    image: jitsucom/bulker:latest
    platform: linux/amd64
    restart: "unless-stopped"
    environment:
      DISABLE_FAST_STORE: "false"
      BULKER_HTTP_PORT: "3042"
      TERM: "xterm-256color"
      BULKER_KAFKA_BOOTSTRAP_SERVERS: "kafka:19092"
      BULKER_AUTH_TOKENS: ${BULKER_PASSWORD}
      BULKER_CONFIG_SOURCE: "redis"
      REDIS_URL: "redis://default:${REDIS_PASSWORD:-default}@redis:6379"
      BULKER_INTERNAL_TASK_LOG: '{"id":"task_log","metricsKeyPrefix":"syncs","usesBulker":true,"type":"postgres","options":{"mode":"stream"},"credentials":{"host":"valmi-db","port":5432,"sslMode":"disable","database":"valmi_app","password":"${POSTGRES_PASSWORD:-default}","username":"${POSTGRES_USER}","defaultSchema":"jitsu"}}'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3042/ready"]
      interval: 2s
      timeout: 10s
      retries: 15
    depends_on:
      redis:
        condition: service_started
      kafka:
        condition: service_healthy
    networks:
      - valmi-network
    ports:
      - "3042:3042"

  syncctl:
    tty: true
    image: jitsucom/syncctl:latest
    platform: linux/amd64
    restart: "on-failure"
    environment:
      HTTP_PORT: "3043"
      TERM: "xterm-256color"
      SYNCCTL_SYNCS_ENABLED: ${SYNCS_ENABLED:-false}
      SYNCCTL_AUTH_TOKENS: ${SYNCCTL_PASSWORD}
      SYNCCTL_DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD:-default}@valmi-db:5432/valmi_app?schema=jitsu"
      SYNCCTL_SIDECAR_DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD:-default}@${EXTERNAL_DATABASE_HOST}:${PG_PORT:-5437}/postgres"
      SYNCCTL_BULKER_URL: "http://${EXTERNAL_BULKER_HOST}:${BULKER_PORT:-3045}"
      SYNCCTL_BULKER_AUTH_TOKEN: ${BULKER_PASSWORD}
      SYNCCTL_BULKER_LOGS_CONNECTION_ID: task_log
      SYNCCTL_KUBERNETES_CLIENT_CONFIG: "${SYNCCTL_KUBERNETES_CLIENT_CONFIG:-local}"
      SYNCCTL_KUBERNETES_CONTEXT: "${SYNCCTL_KUBERNETES_CONTEXT}"
    volumes:
      - ./data/syncctl:/etc/syncctl
    extra_hosts:
      - "kubernetes:host-gateway"
    depends_on:
      bulker:
        condition: service_healthy
      valmi-db:
        condition: service_healthy
    networks:
      - valmi-network
    ports:
      - "3043:3043"

  kafka:
    tty: true
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "19092:19092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:19093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:19092,CONTROLLER://:19093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:19092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server 127.0.0.1:19092 --describe"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - valmi-network
    #depends_on:
    #  - zookeeper

  rotor:
    tty: true
    image: jitsucom/rotor:latest
    platform: linux/amd64
    restart: "unless-stopped"
    environment:
      DISABLE_FAST_STORE: "false"
      DISABLE_SERVICE_prisma: "true"
      DISABLE_SERVICE_pg: "true"
      BULKER_URL: "http://bulker:3042"
      BULKER_AUTH_KEY: ${BULKER_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: "kafka:19092"
      REDIS_URL: "redis://default:${REDIS_PASSWORD:-default}@redis:6379"
      CONFIG_STORE_DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD:-default}@valmi-db:5432/valmi_app?schema=jitsu"
    depends_on:
      bulker:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - valmi-network
    ports:
      - "3401:3401"
  
  console:
    tty: true
    image: jitsucom/console:latest
    restart: "unless-stopped"
    platform: linux/amd64
    environment:
      DISABLE_FAST_STORE: "false"
      ROTOR_URL: "http://rotor:3401"
      BULKER_URL: "http://bulker:3042"
      BULKER_AUTH_KEY: ${BULKER_PASSWORD}
      MIT_COMPLIANT: ${MIT_COMPLIANT:-true}
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD:-default}@valmi-db:5432/valmi_app?schema=jitsu"
      REDIS_URL: "redis://default:${REDIS_PASSWORD:-default}@redis:6379"
      TEST_CREDENTIALS: ${TEST_CREDENTIALS}
      TEST_CREDENTIALS_SHOW_LOGIN: "true"
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      SYNCS_ENABLED: ${SYNCS_ENABLED:-false}
      SYNCCTL_URL: "http://syncctl:3043"
      SYNCCTL_AUTH_KEY: ${SYNCCTL_PASSWORD}
      GOOGLE_SCHEDULER_KEY: ${GOOGLE_SCHEDULER_KEY}
      GOOGLE_SCHEDULER_LOCATION: ${GOOGLE_SCHEDULER_LOCATION:-us-central1}
      #NEXTAUTH_URL: "${JITSU_PUBLIC_URL:-${NEXTAUTH_URL:-http://localhost:${JITSU_PORT:-3000}/}}"
      NEXTAUTH_URL: "${JITSU_PUBLIC_URL:-http://localhost:${JITSU_PORT:-3100}}/}"
      UPDATE_DB: "true"
    depends_on:
      redis:
        condition: service_started
      bulker:
        condition: service_healthy
      valmi-db:
        condition: service_healthy
    ports:
      - "${JITSU_PORT:-3100}:3000"
    networks:
      - valmi-network

  valmi-app:
    environment:
      ENABLE_JITSU: "true"

  valmi-app-backend:
    environment:
      ENABLE_JITSU: "true"
      STREAM_API_URL: "http://console:3000"

volumes:
  kafka_data:
    driver: local
