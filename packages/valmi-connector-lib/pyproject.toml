[tool.poetry]
name = "valmi-connector-lib"
version = "0.1.113"
description = ""
authors = ["Rajashekar Varkala <raj@valmi.io>"]
readme = "README.md"
packages = [{include = "valmi_connector_lib"}]

[tool.poetry.dependencies]
python = "^3.9"
requests = "^2.30.0"
pydantic = "1.9.2"
valmi-airbyte-cdk = "^0.30.3"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
flake8-pyproject = "^1.2.3"
pytest = "^7.3.1"
mypy = "^1.3.0"

[tool.mypy]
plugins = [
  "pydantic.mypy"
]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
show_column_numbers = true
ignore_missing_imports = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true
strict = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.flake8]
ignore = ['H903', 'E266', 'D203', 'H306']
exclude = ['.git', '__pycache__', 'build', 'dist', 'tests']
max-complexity = 10
max-line-length = 120

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Example configuration for Black.

# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.black]
line-length = 119
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
